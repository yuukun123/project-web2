function toggleMenu(hamburger) {
    const mobileMenu = document.getElementById('mobileMenu');
    mobileMenu.classList.toggle('active');
    
    // Toggle active class for both hamburger icons
    document.querySelectorAll('.hamburger').forEach(icon => {
        icon.classList.toggle('active');
    });
}

const logo = document.querySelector('.logo');
logo.addEventListener('click', function(e) {

    e.preventDefault();
    window.location.href = 'home'; 
});

function myFunction() {
    const input = document.getElementById('search');
    // Add your search functionality here
}

// H√†m ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p v√† hi·ªÉn th·ªã l·ªùi ch√†o
function displayWelcomeMessage() {
    // N·∫øu ƒë√£ hi·ªÉn th·ªã l·ªùi ch√†o tr∆∞·ªõc ƒë√≥, kh√¥ng l√†m g√¨ c·∫£
    if (localStorage.getItem("welcomeShown") === "true") {
        return;
    }

    fetch('includes/session.php', {
        method: 'GET',
        credentials: 'include'  // ƒë·∫£m b·∫£o g·ª≠i cookie phi√™n
    })
    .then(response => response.json())
    .then(data => {
        if (data.loggedIn && data.username) {
            const notificate = document.getElementById("notificate");
            const message = document.getElementById("message");

            // Hi·ªÉn th·ªã l·ªùi ch√†o c√° nh√¢n h√≥a d·ª±a tr√™n d·ªØ li·ªáu t·ª´ session.php
            message.innerHTML = `Welcome back, ${data.username}!<br>Have a good day!`;
            notificate.classList.add("show");

            // Sau 2 gi√¢y, ·∫©n th√¥ng b√°o v·ªõi hi·ªáu ·ª©ng chuy·ªÉn ƒë·ªông
            setTimeout(() => {
                notificate.classList.remove("show");
                notificate.classList.add("hide");

                // Sau khi animation ho√†n t·∫•t, ·∫©n ho√†n to√†n ph·∫ßn th√¥ng b√°o
                setTimeout(() => {
                    notificate.style.display = "none";
                }, 1000); // th·ªùi gian n√†y c·∫ßn kh·ªõp v·ªõi CSS transition duration
            }, 2000);

            // ƒê√°nh d·∫•u ƒë√£ hi·ªÉn th·ªã l·ªùi ch√†o ƒë·ªÉ l·∫ßn sau kh√¥ng hi·ªÉn th·ªã l·∫°i
            localStorage.setItem("welcomeShown", "true");
        }
    })
    .catch(error => console.error("Error fetching session data:", error));
}



document.addEventListener("DOMContentLoaded", function () {
    const url = new URL(window.location);
    if (url.searchParams.has('term')) {
      url.searchParams.delete('term');
      window.history.replaceState(null, '', url.toString());
    }

    const blurOverlay = document.querySelector(".blur-overlay");
    const btnCart = document.querySelectorAll(".add-to-cart"); // N√∫t th√™m s·∫£n ph·∫©m
    const shoppingCart = document.querySelector(".shopping-cart"); // C·ª≠a s·ªï gi·ªè h√†ng
    const cartBtn = document.getElementById("cart-btn"); // N√∫t m·ªü gi·ªè h√†ng
    const cartBtns = document.querySelectorAll(".sp-cart");
    const closeBtns = document.querySelectorAll(".close");
    const loginBtn = document.getElementById("login-btn");
    const logoutBtn = document.getElementById("logout-btn");
    const cartCounts = document.querySelectorAll(".cart-count");    
    const payButton = document.querySelector(".pay-btn-link");
    const payLink = document.querySelector(".pay-link");

    // Ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p t·ª´ session
    function checkLoginStatus(callback) {
        fetch("includes/session.php", {
            method: "GET",
            credentials: "include"
        })
        .then(response => response.json())
        .then(data => {
            console.log("Session Data:", data);
            if (data.loggedIn) {
                document.body.classList.add("logged-in");
            } else {
                document.body.classList.remove("logged-in");
            }
            updateUI();
            if (callback) callback(data.loggedIn);
        })
        .catch(error => console.error("L·ªói ki·ªÉm tra session:", error));
    }

    // C·∫≠p nh·∫≠t giao di·ªán ƒëƒÉng nh·∫≠p
    function updateUI() {
        const isLoggedIn = document.body.classList.contains("logged-in");
        if (loginBtn) loginBtn.style.display = isLoggedIn ? "none" : "inline-block";
        if (logoutBtn) logoutBtn.style.display = isLoggedIn ? "inline-block" : "none";
    }

    // Khi nh·∫•n n√∫t m·ªü gi·ªè h√†ng
    // if (cartBtn) {
    //     cartBtn.addEventListener("click", () => {
    //         checkLoginStatus((isLoggedIn) => {
    //             if (isLoggedIn) {
    //                 fetchCart(); // Load gi·ªè h√†ng t·ª´ database
    //                 shoppingCart.classList.add("active");
    //                 if (blurOverlay) blurOverlay.classList.add("active");
    //             } else {
    //                 alert("B·∫°n c·∫ßn ƒëƒÉng nh·∫≠p ƒë·ªÉ xem gi·ªè h√†ng!");
    //                 window.location.href = "login";
    //             }
    //         });
    //     });
    // }

    if (cartBtns.length > 0) {
        cartBtns.forEach(cartBtn => {
            cartBtn.addEventListener("click", () => {
                checkLoginStatus((isLoggedIn) => {
                    if (isLoggedIn) {
                        fetchCart(); // Load gi·ªè h√†ng t·ª´ database
                        shoppingCart.classList.add("active");
                        if (blurOverlay) blurOverlay.classList.add("active");
                    } else {
                        alert("You need to log in to view the cart!");
                        window.location.href = "login";
                    }
                });
            });
        });
    }

    displayWelcomeMessage();

    checkLoginStatus((isLoggedIn)=>{
        if (!isLoggedIn) {
            console.log("Kh√¥ng ƒëƒÉng nh·∫≠p, x√≥a flag welcomeShown");
            localStorage.removeItem("welcomeShown");
            console.log("welcomeShown flag removed:", localStorage.getItem("welcomeShown"));
        }
    });
    
    

    // Khi nh·∫•n n√∫t ƒë√≥ng gi·ªè h√†ng
    closeBtns.forEach(button => {
        button.addEventListener("click", function (event) {
            event.stopPropagation();
            shoppingCart.classList.remove("active");
            if (blurOverlay) blurOverlay.classList.remove("active");
            console.log("ƒê√≥ng gi·ªè h√†ng");
        });
    });
    // document.addEventListener("click", function (event) {
    //     if (event.target.classList.contains("close")) {
    //         shoppingCart.classList.remove("active");
    //         if (blurOverlay) blurOverlay.classList.remove("active");
    //         console.log("ƒê√≥ng gi·ªè h√†ng");
    //     }
    // });
    

    // Th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng (tr√™n trang s·∫£n ph·∫©m)
    btnCart.forEach(button => {
        button.addEventListener("click", function (event) {
            event.stopPropagation();
            checkLoginStatus((isLoggedIn) => {
                if (!isLoggedIn) {
                    alert("You need to log in to add products to the cart!");
                    window.location.href = "login";
                } else {
                    let productId = this.getAttribute("data-id");
                    if (!productId) {
                        alert("Error: Product ID not found!");
                        return;
                    }
                    addToCart(productId);
                }
            });
        });
    });

    // H√†m th√™m s·∫£n ph·∫©m v√†o gi·ªè h√†ng
    function addToCart(productId) {
        console.log("ƒêang g·ª≠i request th√™m s·∫£n ph·∫©m:", productId);
        fetch("includes/cart_action.php", {
            method: "POST",
            credentials: "include",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ action: "add", product_id: parseInt(productId) })
        })
        .then(response => response.json())
        .then(data => {
            console.log("Response t·ª´ server:", data);
            if (data.success) {
                alert("Product has been added to the cart!");
                fetchCart();
                updateCartCount();
            } else {
                alert("Error: " + data.message);
            }
        })
        .catch(error => console.error("L·ªói khi th√™m v√†o gi·ªè h√†ng:", error));
    }

    // H√†m x√≥a s·∫£n ph·∫©m kh·ªèi gi·ªè h√†ng
    function removeFromCart(productId) {
        fetch("includes/cart_action.php", {
            method: "POST",
            credentials: "include",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ action: "remove", product_id: productId })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                fetchCart();
                updateCartCount();
            } else {
                alert("Error deleting product: " + data.message);
            }
        })
        .catch(error => console.error("L·ªói khi x√≥a s·∫£n ph·∫©m:", error));
    }

    // üîΩ Gi·∫£m s·ªë l∆∞·ª£ng ho·∫∑c tƒÉng s·ªë l∆∞·ª£ng khi nh·∫•n n√∫t
    function updateQuantity(productId, change) {
        let inputField = document.getElementById(`quantity_${productId}`);
        let newQuantity = parseInt(inputField.value) + change;
    
        if (newQuantity < 1) newQuantity = 1;
    
        inputField.value = newQuantity;
        sendUpdateRequest(productId, newQuantity);
        updateTotalPrice(); // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn ngay l·∫≠p t·ª©c
    }
    

    // ‚úè Nh·∫≠p tr·ª±c ti·∫øp s·ªë l∆∞·ª£ng s·∫£n ph·∫©m
    function updateQuantityDirectly(productId, value) {
        let newQuantity = parseInt(value);
    
        if (isNaN(newQuantity) || newQuantity < 1) {
            newQuantity = 1;
        }
    
        document.getElementById(`quantity_${productId}`).value = newQuantity;
        sendUpdateRequest(productId, newQuantity);
        updateTotalPrice(); // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn ngay l·∫≠p t·ª©c
    }
    

    // üì° G·ª≠i AJAX c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng
    function sendUpdateRequest(productId, quantity) {
        fetch("includes/cart_action.php", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            credentials: "include",
            body: JSON.stringify({
                action: "update",
                product_id: productId,
                quantity: quantity
            })
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                fetchCart(); // C·∫≠p nh·∫≠t l·∫°i danh s√°ch gi·ªè h√†ng
                updateCartCount(); // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m tr√™n icon gi·ªè h√†ng
                updateTotalPrice(); // C·∫≠p nh·∫≠t t·ªïng ti·ªÅn ngay l·∫≠p t·ª©c
            } else {
                alert("An error occurred while updating the cart!");
            }
        })
        .catch(error => console.error("L·ªói:", error));
    }
    
    function updateTotalPrice() {
        let totalPrice = 0;
        document.querySelectorAll(".cart-item").forEach(item => {
            let price = parseFloat(item.querySelector(".item-price").textContent.replace("‚Ç´", "").replace(",", "").trim());
            let quantity = parseInt(item.querySelector(".quantity-input").value);
            totalPrice += price * quantity;
        });
    
        // C·∫≠p nh·∫≠t v√†o giao di·ªán
        const totalElement = document.querySelector(".cart-total .total-amount");
        if (totalElement) {
            totalElement.textContent = totalPrice.toLocaleString() + " ‚Ç´";
        }
    }
    

    // H√†m l·∫•y danh s√°ch gi·ªè h√†ng
    function fetchCart() {
        fetch("includes/cart.php", {
            method: "GET",
            credentials: "include"
        })
        .then(response => response.text())
        .then(data => {
            console.log("D·ªØ li·ªáu gi·ªè h√†ng nh·∫≠n ƒë∆∞·ª£c:", data);
            const cartContent = document.querySelector(".cart-scroll"); // Ch·ªâ c·∫≠p nh·∫≠t n·ªôi dung s·∫£n ph·∫©m
            if (cartContent) {
                if (data.includes("empty-cart")) { // Ki·ªÉm tra n·∫øu c√≥ n·ªôi dung r·ªóng t·ª´ PHP
                    cartContent.innerHTML = `
                        <div class="emptyCart">
                            <div class="close-icon"> <ion-icon name="alert-circle-outline"></ion-icon> </div>
                            <p class="empty-cart">Your cart is empty.</p>
                        </div>
                    `;
                }
                else {
                    // C·∫≠p nh·∫≠t danh s√°ch s·∫£n ph·∫©m m√† kh√¥ng ·∫£nh h∆∞·ªüng n√∫t ƒë√≥ng
                    cartContent.innerHTML = data;
                }
            } else {
                console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ .cart-content tr√™n trang!");
            }
    
            // Hi·ªÉn th·ªã gi·ªè h√†ng v√† l·ªõp m·ªù n·∫øu ch∆∞a hi·ªÉn th·ªã
            shoppingCart.classList.add("active");
            if (blurOverlay) blurOverlay.classList.add("active");
        })
        .catch(error => console.error("L·ªói khi fetch gi·ªè h√†ng:", error));
    }
    

    // H√†m c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng s·∫£n ph·∫©m tr√™n icon gi·ªè h√†ng
    function updateCartCount() {
        fetch("includes/cart_action.php?cart_count=1", {
            method: "GET",
            credentials: "include"
        })
        .then(response => response.json())
        .then(data => {
            console.log("S·ªë l∆∞·ª£ng gi·ªè h√†ng:", data.count);
    
            // C·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng gi·ªè h√†ng tr√™n t·∫•t c·∫£ c√°c ph·∫ßn t·ª≠ hi·ªÉn th·ªã
            document.querySelectorAll(".cart-count").forEach(cartCount => {
                cartCount.textContent = data.count || 0;
            });
    
            // N·∫øu gi·ªè h√†ng c√≥ s·∫£n ph·∫©m, cho ph√©p thanh to√°n
            if (data.count > 0) {
                payButton.removeAttribute("disabled");
                payButton.classList.remove("disabled");
                payLink.classList.remove("disabled-link"); // ƒê·∫£m b·∫£o c√≥ th·ªÉ nh·∫•n
            } else {
                payButton.setAttribute("disabled", "true");
                payButton.classList.add("disabled");
                payLink.classList.add("disabled-link"); // NgƒÉn ƒëi·ªÅu h∆∞·ªõng
            }
        })
        .catch(error => console.error("L·ªói khi l·∫•y s·ªë l∆∞·ª£ng gi·ªè h√†ng:", error));
    }
    
    // NgƒÉn ƒëi·ªÅu h∆∞·ªõng n·∫øu gi·ªè h√†ng r·ªóng
    payLink.addEventListener("click", function(event) {
        if (payButton.hasAttribute("disabled")) {
            event.preventDefault(); // NgƒÉn ch·∫∑n chuy·ªÉn trang
            alert("Your cart is empty. Please add products before proceeding to checkout!");
        }
    });
    

    // Khi trang t·∫£i xong, ki·ªÉm tra tr·∫°ng th√°i ƒëƒÉng nh·∫≠p v√† c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng gi·ªè h√†ng
    checkLoginStatus();
    updateCartCount();
    window.updateQuantity = updateQuantity;
    window.removeFromCart = removeFromCart;
    window.updateQuantityDirectly = updateQuantityDirectly;
    

    // search product

        // render v√† l·ªçc s·∫£n ph·∫©m
    let itemsPerPage = 8; // S·ªë s·∫£n ph·∫©m m·ªói trang
    let currentPage = 1;
    let selectedCategory = "all"; // M·∫∑c ƒë·ªãnh l√† All

    // function updateProducts() {
    //     // L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m trong container
    //     let allProducts = document.querySelectorAll("#product-container .movie-item");
    //     if (allProducts.length === 0) return; // N·∫øu kh√¥ng c√≥ s·∫£n ph·∫©m, d·ª´ng

    //     // ·∫®n t·∫•t c·∫£ s·∫£n ph·∫©m
    //     allProducts.forEach(product => product.style.display = "none");

    //     // L·ªçc s·∫£n ph·∫©m theo danh m·ª•c
    //     let filteredProducts = selectedCategory === "all"
    //         ? allProducts
    //         : document.querySelectorAll(`#product-container .movie-item[data-category="${selectedCategory}"]`);

    //     if (filteredProducts.length === 0) {
    //         console.warn("Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m n√†o thu·ªôc danh m·ª•c: " + selectedCategory);
    //         return;
    //     }

    //     let totalPages = Math.ceil(filteredProducts.length / itemsPerPage);
    //     if (currentPage > totalPages) currentPage = 1; // N·∫øu v∆∞·ª£t qu√° s·ªë trang, quay v·ªÅ trang ƒë·∫ßu

    //     // Hi·ªÉn th·ªã s·∫£n ph·∫©m c·ªßa trang hi·ªán t·∫°i
    //     filteredProducts.forEach((product, index) => {
    //         product.style.display = (index >= (currentPage - 1) * itemsPerPage && index < currentPage * itemsPerPage) 
    //             ? "block" 
    //             : "none";
    //     });

    //     // C·∫≠p nh·∫≠t giao di·ªán ph√¢n trang
    //     let paginationContainer = document.querySelector(".pagination");
    //     paginationContainer.innerHTML = ""; // X√≥a ph√¢n trang c≈©

    //     if (totalPages > 1) { // T·∫°o n√∫t ph√¢n trang n·∫øu c√≥ h∆°n 1 trang
    //         for (let i = 1; i <= totalPages; i++) {
    //             let button = document.createElement("button");
    //             button.className = "page-link";
    //             button.innerText = i;
    //             button.dataset.page = i;
    //             if (i === currentPage) button.classList.add("active");
    //             paginationContainer.appendChild(button);
    //         }
    //     }
    // }

    // // X·ª≠ l√Ω s·ª± ki·ªán khi b·∫•m v√†o n√∫t ph√¢n trang
    // const pagination = document.querySelector(".pagination");
    // if (pagination) {
    //     pagination.addEventListener("click", function (event) {
    //         if (event.target.tagName === "BUTTON") {
    //             currentPage = parseInt(event.target.dataset.page);
    //             updateProducts();
    //         }
    //     });
    // }
    
    // X·ª≠ l√Ω s·ª± ki·ªán l·ªçc s·∫£n ph·∫©m khi thay ƒë·ªïi radio input
    document.querySelectorAll(".nav-item").forEach(item => {
        item.addEventListener("click", () => {
            const category = item.textContent.trim().toLowerCase();
            const urlParams = new URLSearchParams(window.location.search);
            urlParams.set('category', category);
            urlParams.set('page', '1'); // Reset trang v·ªÅ 1 khi ƒë·ªïi filter
            window.location.search = urlParams.toString();
        });
    });
    

    // C·∫≠p nh·∫≠t class active cho navigation (d√†nh cho nh√£n)
    document.querySelectorAll(".nav-item").forEach(label => {
        label.addEventListener("click", function () {
            document.querySelectorAll(".nav-item").forEach(l => l.classList.remove("active"));
            this.classList.add("active");
        });
    });


      

    // updateProducts(); // Ch·∫°y l·∫ßn ƒë·∫ßu khi trang t·∫£i

    // test fetch s·∫£n ph·∫©m 
    const searchTerm = '';
    const urll = `pages/getAllProduct.php?term=${encodeURIComponent(searchTerm)}`;
    console.log('Fetching:', urll); // Ki·ªÉm tra URL

    fetch(urll)
    .then(response => response.json())
    .then(data => console.log(data))
    .catch(error => console.error('Error:', error));

    // X·ª≠ l√Ω g·ªçi s·∫£n ph·∫©m t·ª´ server
    // X√≥a d·∫•u ti·∫øng Vi·ªát
function removeVietnameseTones(str) {
    return str.normalize("NFD")
              .replace(/[\u0300-\u036f]/g, "")
              .replace(/ƒë/g, "d")
              .replace(/ƒê/g, "D");
}

// Hi·ªÉn th·ªã g·ª£i √Ω t√¨m ki·∫øm (autocomplete)
function showHints(inputField) {
    const rawInput = inputField.value.trim();
    const searchTerm = removeVietnameseTones(rawInput.toLowerCase());
    const hintContainer = inputField.closest(".search-container").querySelector(".hint-container");

    if (!searchTerm) {
        hintContainer.innerHTML = "";
        hintContainer.style.display = "none";
        return;
    }

    fetch(`pages/getAllProduct.php?term=${encodeURIComponent(searchTerm)}`)
        .then(response => response.json())
        .then(products => {
            hintContainer.innerHTML = "";

            if (!products || products.length === 0) {
                const notFoundItem = document.createElement("div");
                notFoundItem.className = "hint-item";
                notFoundItem.textContent = "Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m";
                notFoundItem.style.textAlign = "center";
                notFoundItem.style.padding = "8px";
                notFoundItem.style.color = "#999";
                hintContainer.appendChild(notFoundItem);
                hintContainer.style.display = "block";
                return;
            }

            products.forEach(item => {
                const hintItem = document.createElement("div");
                hintItem.className = "hint-item";
                hintItem.dataset.productId = item.product_id;
                hintItem.innerHTML = `
                    <img src="${item.image}" alt="${item.product_name}" 
                         style="width:30px; height:30px; margin-right:10px; vertical-align:middle;">
                    ${item.product_name}
                `;

                hintItem.addEventListener("mousedown", e => e.preventDefault()); // ngƒÉn m·∫•t focus
                hintItem.addEventListener("click", () => {
                    window.location.href = `home?pages=product&id=${item.product_id}`;
                });

                hintContainer.appendChild(hintItem);
            });

            hintContainer.style.display = "block";
        })
        .catch(error => console.error("L·ªói khi l·∫•y g·ª£i √Ω:", error));
}


    const searchInputs = document.querySelectorAll(".search-input");
    const searchButtons = document.querySelectorAll(".searchBtn");

    // G·ª£i √Ω s·∫£n ph·∫©m
    // function showHints(inputField) {
    //     const rawInput = inputField.value.trim();
    //     const searchTerm = removeVietnameseTones(rawInput.toLowerCase());

    //     const hintContainer = inputField.closest(".search-container").querySelector(".hint-container");
    //     if (!hintContainer) return;

    //     if (!searchTerm) {
    //         hintContainer.innerHTML = "";
    //         hintContainer.style.display = "none";
    //         return;
    //     }

    //     fetch(`pages/getAllProduct.php?term=${encodeURIComponent(searchTerm)}`)
    //         .then(response => response.json())
    //         .then(products => {
    //             hintContainer.innerHTML = "";

    //             if (!products || products.length === 0) {
    //                 const notFoundItem = document.createElement("div");
    //                 notFoundItem.className = "hint-item";
    //                 notFoundItem.textContent = "Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m";
    //                 notFoundItem.style.textAlign = "center";
    //                 notFoundItem.style.padding = "8px";
    //                 notFoundItem.style.color = "#999";
    //                 hintContainer.appendChild(notFoundItem);
    //                 hintContainer.style.display = "block";
    //                 return;
    //             }

    //             products.forEach(item => {
    //                 const hintItem = document.createElement("div");
    //                 hintItem.className = "hint-item";
    //                 hintItem.dataset.productId = item.product_id;
    //                 hintItem.innerHTML = `
    //                     <img src="${item.image}" alt="${item.product_name}" 
    //                         style="width:30px; height:30px; margin-right:10px; vertical-align:middle;">
    //                     ${item.product_name}
    //                 `;

    //                 hintItem.addEventListener("mousedown", (e) => {
    //                     e.preventDefault(); // gi·ªØ focus
    //                     isSelectingHint = true;
    //                 });

    //                 hintItem.addEventListener("click", () => {
    //                     window.location.href = `home?pages=product&id=${item.product_id}`;
    //                 });

    //                 hintContainer.appendChild(hintItem);
    //             });

    //             hintContainer.style.display = "block";
    //         })
    //         .catch(error => {
    //             console.error("L·ªói khi l·∫•y g·ª£i √Ω:", error);
    //         });
    // }

    function removeVietnameseTones(str) {
        return str.normalize("NFD")
            .replace(/[\u0300-\u036f]/g, "")
            .replace(/ƒë/g, "d")
            .replace(/ƒê/g, "D");
    }

    let inputTimeout = null;
    let isSelectingHint = false;
    let lastInputValue = "";
    
    searchInputs.forEach(input => {
        // Khi g√µ ti·∫øng Vi·ªát b·∫±ng IME
        input.addEventListener("compositionend", function () {
            lastInputValue = this.value.trim();
        });
    
        input.addEventListener('input', function () {
            const hintContainer = this.closest(".search-container").querySelector(".hint-container");
            if (!hintContainer) return;
    
            const value = this.value.trim();
            lastInputValue = value;
    
            // H·ªßy timeout tr∆∞·ªõc n·∫øu c√≥
            if (inputTimeout) clearTimeout(inputTimeout);
    
            if (value === '') {
                hintContainer.innerHTML = '';
                hintContainer.style.display = 'none';
    
                // X√≥a term kh·ªèi URL & reload trang
                const url = new URL(window.location);
                url.searchParams.delete('term');
                url.searchParams.set('page', 1);
                window.location.href = url.toString();
                return;
            }
    
            // Ch·ªù 500ms r·ªìi m·ªõi fetch hint
            inputTimeout = setTimeout(() => {
                showHints(input);
            }, 500);
        });
    
        input.addEventListener("keypress", function (event) {
            if (event.key === "Enter") {
                event.preventDefault();
    
                const raw = lastInputValue || this.value.trim();
                if (raw) {
                    const term = encodeURIComponent(raw);
                    window.location.href = `?term=${term}&page=1`;
                }
            }
        });
    
        input.addEventListener("blur", function () {
            setTimeout(() => {
                if (!isSelectingHint) {
                    const hintContainer = this.closest(".search-container").querySelector(".hint-container");
                    if (hintContainer) hintContainer.style.display = "none";
                }
                isSelectingHint = false;
            }, 200);
        });
    });
    
    // Ghi l·∫°i tr·∫°ng th√°i khi click v√†o g·ª£i √Ω
    document.addEventListener("mousedown", e => {
        if (e.target.closest(".hint-item")) {
            isSelectingHint = true;
        }
    });
    
    
    // Ghi l·∫°i tr·∫°ng th√°i khi click v√†o hint
    document.addEventListener("mousedown", e => {
        if (e.target.closest(".hint-item")) {
            isSelectingHint = true;
        }
    });
    
    // ·∫®n g·ª£i √Ω n·∫øu click ngo√†i v√πng t√¨m ki·∫øm
    document.addEventListener("click", function (event) {
        if (!event.target.closest(".search-container") && !event.target.closest(".hint-item")) {
            document.querySelectorAll(".hint-container").forEach(hint => {
                hint.innerHTML = "";
                hint.style.display = "none";
            });
        }
    });
    
    // X·ª≠ l√Ω n√∫t t√¨m ki·∫øm
    searchButtons.forEach(button => {
        button.addEventListener("click", function () {
            const searchInput = button.closest(".input-wrapper").querySelector(".search-input");
            if (searchInput) {
                const raw = searchInput.value.trim();
                if (raw) {
                    const term = encodeURIComponent(raw);
                    window.location.href = `?term=${term}&page=1`;
                }
            }
        });
    });
    


    
});

/*scroll*/
let lastScrollTop = 0;
const header = document.querySelector('.header');
const mediaQuery = window.matchMedia('(max-width: 1390px)');

function handleScroll() {
    if (mediaQuery.matches) {
        let scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        if (scrollTop > lastScrollTop) {
            // Scrolling down
            header.classList.add('hide');
        } else {
            // Scrolling up
            header.classList.remove('hide');
        }
        lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
    } else {
        // If not in responsive mode, always show the header
        header.classList.remove('hide');
    }
}

// Listen for scroll events
window.addEventListener('scroll', handleScroll);

// Listen for resize events to handle orientation changes
window.addEventListener('resize', handleScroll);

// Initial call to set the correct state
handleScroll();

// back to top scrolling
window.onscroll = function () {
    toggleBackToTopButton();
};

function toggleBackToTopButton() {
    const backToTopButton = document.getElementById("backToTop");
    if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {
        backToTopButton.style.display = "block";
    } else {
        backToTopButton.style.display = "none";
    }
}

function scrollToTop() {
    window.scrollTo({ top: 0, behavior: 'smooth' });
}


$(document).ready(function(){
    $('.carousel_wrapper').slick({
        dots: true,
        infinite: true,
        speed: 500,
        slidesToShow: 1,
        slidesToScroll: 1,
        adaptiveHeight: true,
        prevArrow: $('.custom-prev'),
        nextArrow: $('.custom-next'),
        dotsClass: 'carousel-dots',
        responsive: [
            {
                breakpoint: 1197,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    infinite: true,
                    dots: true
                }
            },
            {
                breakpoint: 768,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    dots: true,
                    arrows: false,
                }
            },
            {
                breakpoint: 480,
                settings: {
                    slidesToShow: 1,
                    slidesToScroll: 1,
                    dots: true,
                    arrows: false
                }
            }
        ]
    });
});


// script.js

// ... (toggleMenu, logo click, myFunction - gi·ªØ nguy√™n) ...
// function toggleMenu(hamburger) {
//     const mobileMenu = document.getElementById('mobileMenu');
//     mobileMenu.classList.toggle('active');
//     document.querySelectorAll('.hamburger').forEach(icon => {
//         icon.classList.toggle('active');
//     });
// }

// const logo = document.querySelector('.logo');
// if (logo) { // Th√™m ki·ªÉm tra null
//     logo.addEventListener('click', function(e) {
//         e.preventDefault();
//         window.location.href = 'home'; // ƒê·∫£m b·∫£o 'home' l√† URL h·ª£p l·ªá
//     });
// }


// function myFunction() { // H√†m n√†y ch∆∞a c√≥ n·ªôi dung, c√≥ th·ªÉ b·∫°n s·∫Ω th√™m sau
//     const input = document.getElementById('search');
//     // Add your search functionality here
// }

// function displayWelcomeMessage() {
//     if (localStorage.getItem("welcomeShown") === "true") {
//         return;
//     }
//     fetch('includes/session.php', { // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng t·ª´ v·ªã tr√≠ trang HTML
//         method: 'GET',
//         credentials: 'include'
//     })
//     .then(response => {
//         if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
//         return response.json();
//     })
//     .then(data => {
//         if (data.loggedIn && data.username) {
//             const notificate = document.getElementById("notificate");
//             const message = document.getElementById("message");
//             if (notificate && message) { // Ki·ªÉm tra ph·∫ßn t·ª≠ t·ªìn t·∫°i
//                 message.innerHTML = `Welcome back, ${data.username}!<br>Have a good day!`;
//                 notificate.classList.add("show");
//                 setTimeout(() => {
//                     notificate.classList.remove("show");
//                     notificate.classList.add("hide");
//                     setTimeout(() => {
//                         notificate.style.display = "none";
//                     }, 1000);
//                 }, 2000);
//                 localStorage.setItem("welcomeShown", "true");
//             }
//         }
//     })
//     .catch(error => console.error("Error fetching session data:", error));
// }

// document.addEventListener("DOMContentLoaded", function () {
//     const currentUrl = new URL(window.location.href); // S·ª≠ d·ª•ng window.location.href
//     if (currentUrl.searchParams.has('term')) {
//         // C√¢n nh·∫Øc: Ch·ªâ x√≥a 'term' n·∫øu n√≥ r·ªóng ho·∫∑c kh√¥ng mu·ªën gi·ªØ l·∫°i khi t·∫£i l·∫°i trang
//         // Ho·∫∑c c√≥ th·ªÉ b·∫°n mu·ªën gi·ªØ l·∫°i 'term' ƒë·ªÉ √¥ t√¨m ki·∫øm ƒë∆∞·ª£c ƒëi·ªÅn s·∫µn
//         // V√≠ d·ª•: currentUrl.searchParams.delete('term');
//         // window.history.replaceState(null, '', currentUrl.toString());
//     }

//     const blurOverlay = document.querySelector(".blur-overlay");
//     const btnCart = document.querySelectorAll(".add-to-cart");
//     const shoppingCart = document.querySelector(".shopping-cart");
//     // const cartBtn = document.getElementById("cart-btn"); // B·∫°n ƒë√£ comment code s·ª≠ d·ª•ng n√≥
//     const cartBtns = document.querySelectorAll(".sp-cart");
//     const closeBtns = document.querySelectorAll(".close");
//     const loginBtn = document.getElementById("login-btn");
//     const logoutBtn = document.getElementById("logout-btn");
//     // const cartCounts = document.querySelectorAll(".cart-count"); // Kh√¥ng th·∫•y s·ª≠ d·ª•ng tr·ª±c ti·∫øp bi·∫øn n√†y
//     const payButton = document.querySelector(".pay-btn-link");
//     const payLink = document.querySelector(".pay-link");

//     function checkLoginStatus(callback) {
//         fetch("includes/session.php", { // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng
//             method: "GET",
//             credentials: "include"
//         })
//         .then(response => {
//             if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
//             return response.json();
//         })
//         .then(data => {
//             console.log("Session Data:", data);
//             if (data.loggedIn) {
//                 document.body.classList.add("logged-in");
//             } else {
//                 document.body.classList.remove("logged-in");
//             }
//             updateUI();
//             if (callback) callback(data.loggedIn);
//         })
//         .catch(error => {
//             console.error("L·ªói ki·ªÉm tra session:", error);
//             // X·ª≠ l√Ω UI n·∫øu kh√¥ng l·∫•y ƒë∆∞·ª£c session, v√≠ d·ª• coi nh∆∞ ch∆∞a ƒëƒÉng nh·∫≠p
//             document.body.classList.remove("logged-in");
//             updateUI();
//             if (callback) callback(false); // Gi·∫£ s·ª≠ ch∆∞a ƒëƒÉng nh·∫≠p n·∫øu c√≥ l·ªói
//         });
//     }

//     function updateUI() {
//         const isLoggedIn = document.body.classList.contains("logged-in");
//         if (loginBtn) loginBtn.style.display = isLoggedIn ? "none" : "inline-block";
//         if (logoutBtn) logoutBtn.style.display = isLoggedIn ? "inline-block" : "none";
//     }

//     if (cartBtns.length > 0 && shoppingCart) { // Th√™m ki·ªÉm tra shoppingCart
//         cartBtns.forEach(cartBtn => {
//             cartBtn.addEventListener("click", () => {
//                 checkLoginStatus((isLoggedIn) => {
//                     if (isLoggedIn) {
//                         fetchCart();
//                         shoppingCart.classList.add("active");
//                         if (blurOverlay) blurOverlay.classList.add("active");
//                     } else {
//                         alert("You need to log in to view the cart!");
//                         window.location.href = "login"; // ƒê·∫£m b·∫£o 'login' l√† URL h·ª£p l·ªá
//                     }
//                 });
//             });
//         });
//     }

//     displayWelcomeMessage();

//     checkLoginStatus((isLoggedIn) => {
//         if (!isLoggedIn) {
//             console.log("Kh√¥ng ƒëƒÉng nh·∫≠p, x√≥a flag welcomeShown");
//             localStorage.removeItem("welcomeShown");
//             console.log("welcomeShown flag removed:", localStorage.getItem("welcomeShown"));
//         }
//     });

//     if (shoppingCart) { // Th√™m ki·ªÉm tra shoppingCart
//         closeBtns.forEach(button => {
//             button.addEventListener("click", function (event) {
//                 event.stopPropagation();
//                 shoppingCart.classList.remove("active");
//                 if (blurOverlay) blurOverlay.classList.remove("active");
//                 console.log("ƒê√≥ng gi·ªè h√†ng");
//             });
//         });
//     }

//     btnCart.forEach(button => {
//         button.addEventListener("click", function (event) {
//             event.stopPropagation();
//             checkLoginStatus((isLoggedIn) => {
//                 if (!isLoggedIn) {
//                     alert("You need to log in to add products to the cart!");
//                     window.location.href = "login";
//                 } else {
//                     let productId = this.getAttribute("data-id");
//                     if (!productId) {
//                         alert("Error: Product ID not found!");
//                         return;
//                     }
//                     addToCart(productId);
//                 }
//             });
//         });
//     });

//     function addToCart(productId) {
//         console.log("ƒêang g·ª≠i request th√™m s·∫£n ph·∫©m:", productId);
//         fetch("includes/cart_action.php", { // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng
//             method: "POST",
//             credentials: "include",
//             headers: { "Content-Type": "application/json" },
//             body: JSON.stringify({ action: "add", product_id: parseInt(productId) })
//         })
//         .then(response => {
//             if (!response.ok) return response.text().then(text => { throw new Error(`Server Error ${response.status}: ${text}`) });
//             return response.json();
//         })
//         .then(data => {
//             console.log("Response t·ª´ server (addToCart):", data);
//             if (data.success) {
//                 alert("Product has been added to the cart!");
//                 fetchCart();
//                 updateCartCount();
//             } else {
//                 alert("Error: " + (data.message || "Could not add product."));
//             }
//         })
//         .catch(error => console.error("L·ªói khi th√™m v√†o gi·ªè h√†ng:", error));
//     }

//     window.removeFromCart = function removeFromCart(productId) { // G√°n v√†o window ƒë·ªÉ HTML c√≥ th·ªÉ g·ªçi
//         fetch("includes/cart_action.php", { // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng
//             method: "POST",
//             credentials: "include",
//             headers: { "Content-Type": "application/json" },
//             body: JSON.stringify({ action: "remove", product_id: productId })
//         })
//         .then(response => {
//             if (!response.ok) return response.text().then(text => { throw new Error(`Server Error ${response.status}: ${text}`) });
//             return response.json();
//         })
//         .then(data => {
//             if (data.success) {
//                 fetchCart();
//                 updateCartCount();
//             } else {
//                 alert("Error deleting product: " + (data.message || "Unknown error."));
//             }
//         })
//         .catch(error => console.error("L·ªói khi x√≥a s·∫£n ph·∫©m:", error));
//     }

//     window.updateQuantity = function updateQuantity(productId, change) { // G√°n v√†o window
//         let inputField = document.getElementById(`quantity_${productId}`);
//         if (!inputField) return;
//         let newQuantity = parseInt(inputField.value) + change;
//         if (newQuantity < 1) newQuantity = 1;
//         inputField.value = newQuantity;
//         sendUpdateRequest(productId, newQuantity);
//         // updateTotalPrice(); // fetchCart s·∫Ω c·∫≠p nh·∫≠t l·∫°i n√™n c√≥ th·ªÉ kh√¥ng c·∫ßn g·ªçi ri√™ng ·ªü ƒë√¢y
//     }

//     window.updateQuantityDirectly = function updateQuantityDirectly(productId, value) { // G√°n v√†o window
//         let inputField = document.getElementById(`quantity_${productId}`);
//         if (!inputField) return;
//         let newQuantity = parseInt(value);
//         if (isNaN(newQuantity) || newQuantity < 1) {
//             newQuantity = 1; // Ho·∫∑c c√≥ th·ªÉ l·∫•y gi√° tr·ªã c≈© n·∫øu input kh√¥ng h·ª£p l·ªá
//         }
//         inputField.value = newQuantity;
//         sendUpdateRequest(productId, newQuantity);
//         // updateTotalPrice();
//     }

//     function sendUpdateRequest(productId, quantity) {
//         fetch("includes/cart_action.php", { // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng
//             method: "POST",
//             headers: { "Content-Type": "application/json" },
//             credentials: "include",
//             body: JSON.stringify({
//                 action: "update",
//                 product_id: productId,
//                 quantity: quantity
//             })
//         })
//         .then(response => {
//             if (!response.ok) return response.text().then(text => { throw new Error(`Server Error ${response.status}: ${text}`) });
//             return response.json();
//         })
//         .then(data => {
//             if (data.success) {
//                 fetchCart();
//                 updateCartCount();
//                 // updateTotalPrice ƒë√£ ƒë∆∞·ª£c g·ªçi trong fetchCart (n·∫øu cart.php tr·∫£ v·ªÅ t·ªïng ti·ªÅn) ho·∫∑c c·∫ßn g·ªçi ri√™ng
//             } else {
//                 alert("An error occurred while updating the cart!");
//                 // C√≥ th·ªÉ fetchCart ƒë·ªÉ revert l·∫°i gi√° tr·ªã c≈© n·∫øu update l·ªói
//                 fetchCart();
//             }
//         })
//         .catch(error => {
//             console.error("L·ªói khi c·∫≠p nh·∫≠t s·ªë l∆∞·ª£ng:", error);
//             fetchCart(); // L·∫•y l·∫°i tr·∫°ng th√°i gi·ªè h√†ng c≈© n·∫øu c√≥ l·ªói
//         });
//     }

//     // updateTotalPrice n√™n ƒë∆∞·ª£c g·ªçi sau khi fetchCart c·∫≠p nh·∫≠t DOM xong
//     // Ho·∫∑c cart.php c√≥ th·ªÉ tr·∫£ v·ªÅ t·ªïng ti·ªÅn v√† b·∫°n c·∫≠p nh·∫≠t t·ª´ ƒë√≥.
//     // N·∫øu cart.php ch·ªâ tr·∫£ v·ªÅ HTML c·ªßa c√°c item, th√¨ updateTotalPrice ph·∫£i ch·∫°y sau khi innerHTML ƒë∆∞·ª£c c·∫≠p nh·∫≠t.
//     // function updateTotalPrice() { ... } // Gi·ªØ nguy√™n ho·∫∑c t√≠ch h·ª£p v√†o fetchCart

//     function fetchCart() {
//         fetch("includes/cart.php", { // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng
//             method: "GET",
//             credentials: "include"
//         })
//         .then(response => {
//             if (!response.ok) return response.text().then(text => { throw new Error(`Server Error ${response.status}: ${text}`) });
//             return response.text(); // cart.php tr·∫£ v·ªÅ HTML
//         })
//         .then(data => {
//             console.log("D·ªØ li·ªáu gi·ªè h√†ng nh·∫≠n ƒë∆∞·ª£c:", data);
//             const cartContent = document.querySelector(".cart-scroll");
//             const cartTotalContainer = document.querySelector(".cart-total"); // Gi·∫£ s·ª≠ c√≥ container n√†y

//             if (cartContent) {
//                 cartContent.innerHTML = data; // C·∫≠p nh·∫≠t item

//                 // Sau khi c·∫≠p nh·∫≠t item, t√≠nh l·∫°i v√† c·∫≠p nh·∫≠t t·ªïng ti·ªÅn
//                 let totalPrice = 0;
//                 let itemCount = 0;
//                 cartContent.querySelectorAll(".cart-item").forEach(item => {
//                     const priceElement = item.querySelector(".item-price");
//                     const quantityInput = item.querySelector(".quantity-input");
//                     if (priceElement && quantityInput) {
//                         let price = parseFloat(priceElement.dataset.price); // L·∫•y gi√° g·ªëc t·ª´ data-attribute
//                         let quantity = parseInt(quantityInput.value);
//                         if (!isNaN(price) && !isNaN(quantity)) {
//                              totalPrice += price * quantity;
//                              itemCount++;
//                         }
//                     }
//                 });

//                 const totalAmountElement = document.querySelector(".cart-total .total-amount");
//                 if (totalAmountElement) {
//                     totalAmountElement.textContent = totalPrice.toLocaleString() + " ‚Ç´";
//                 }

//                 // X·ª≠ l√Ω hi·ªÉn th·ªã/·∫©n ph·∫ßn t·ªïng ti·ªÅn v√† n√∫t thanh to√°n d·ª±a tr√™n gi·ªè h√†ng r·ªóng
//                 if (itemCount === 0 || data.includes("empty-cart")) {
//                     if(cartTotalContainer) cartTotalContainer.style.display = 'none';
//                     cartContent.innerHTML = `
//                         <div class="emptyCart" style="text-align: center; padding: 20px;">
//                             <div class="close-icon" style="font-size: 40px; color: #ccc;"> <ion-icon name="alert-circle-outline"></ion-icon> </div>
//                             <p class="empty-cart" style="color: #777;">Your cart is empty.</p>
//                         </div>`;
//                 } else {
//                     if(cartTotalContainer) cartTotalContainer.style.display = 'block'; // Ho·∫∑c gi√° tr·ªã display ph√π h·ª£p
//                 }


//             } else {
//                 console.error("Kh√¥ng t√¨m th·∫•y ph·∫ßn t·ª≠ .cart-scroll tr√™n trang!");
//             }

//             if (shoppingCart) shoppingCart.classList.add("active"); // M·ªü gi·ªè h√†ng n·∫øu ch∆∞a m·ªü
//             if (blurOverlay) blurOverlay.classList.add("active");
//             updateCartCount(); // C·∫≠p nh·∫≠t l·∫°i s·ªë l∆∞·ª£ng tr√™n icon
//         })
//         .catch(error => {
//             console.error("L·ªói khi fetch gi·ªè h√†ng:", error);
//              const cartContent = document.querySelector(".cart-scroll");
//              if(cartContent) cartContent.innerHTML = `<div style="color:red; text-align:center; padding:20px;">Error loading cart.</div>`;
//         });
//     }

//     function updateCartCount() {
//         fetch("includes/cart_action.php?cart_count=1", { // ƒê·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ƒë√∫ng
//             method: "GET",
//             credentials: "include"
//         })
//         .then(response => {
//             if (!response.ok) return response.text().then(text => { throw new Error(`Server Error ${response.status}: ${text}`) });
//             return response.json();
//         })
//         .then(data => {
//             console.log("S·ªë l∆∞·ª£ng gi·ªè h√†ng:", data.count);
//             const count = data.count || 0;
//             document.querySelectorAll(".cart-count").forEach(cartCount => {
//                 cartCount.textContent = count;
//             });

//             if (payButton && payLink) { // Th√™m ki·ªÉm tra null
//                 if (count > 0) {
//                     payButton.removeAttribute("disabled");
//                     payButton.classList.remove("disabled");
//                     payLink.classList.remove("disabled-link");
//                 } else {
//                     payButton.setAttribute("disabled", "true");
//                     payButton.classList.add("disabled");
//                     payLink.classList.add("disabled-link");
//                 }
//             }
//         })
//         .catch(error => console.error("L·ªói khi l·∫•y s·ªë l∆∞·ª£ng gi·ªè h√†ng:", error));
//     }

//     if (payLink && payButton) { // Th√™m ki·ªÉm tra null
//         payLink.addEventListener("click", function(event) {
//             if (payButton.hasAttribute("disabled")) {
//                 event.preventDefault();
//                 alert("Your cart is empty. Please add products before proceeding to checkout!");
//             }
//         });
//     }

//     checkLoginStatus();
//     updateCartCount(); // G·ªçi ban ƒë·∫ßu

//     // Lo·∫°i b·ªè ƒëo·∫°n test fetch getAllProduct.php ·ªü ƒë√¢y n·∫øu kh√¥ng c·∫ßn thi·∫øt n·ªØa
//     // Ho·∫∑c ƒë·∫£m b·∫£o n√≥ x·ª≠ l√Ω l·ªói response.ok
//     /*
//     const testSearchTerm = ''; // Ho·∫∑c 'm'
//     const testUrl = `pages/getAllProduct.php?term=${encodeURIComponent(testSearchTerm)}`;
//     console.log('Initial Fetching Test:', testUrl);
//     fetch(testUrl)
//         .then(response => {
//             if (!response.ok) {
//                 return response.text().then(text => { throw new Error(`Test Fetch Server Error ${response.status}: ${text}`); });
//             }
//             return response.json();
//         })
//         .then(data => console.log("Test fetch data:", data))
//         .catch(error => console.error('Test fetch error:', error));
//     */

//     // --- LOGIC T√åM KI·∫æM S·∫¢N PH·∫®M ---
//     // G·ªôp c√°c khai b√°o h√†m b·ªã tr√πng l·∫∑p
//     function removeVietnameseTones(str) {
//         if (typeof str !== 'string') return str;
//         return str.normalize("NFD")
//                   .replace(/[\u0300-\u036f]/g, "")
//                   .replace(/ƒë/g, "d")
//                   .replace(/ƒê/g, "D");
//     }

//     // H√†m showHints n√™n ch·ªâ c√≥ m·ªôt phi√™n b·∫£n
//     function showHints(inputField) {
//         const rawInput = inputField.value.trim();
//         const searchTermForHint = removeVietnameseTones(rawInput.toLowerCase()); // ƒê·ªïi t√™n bi·∫øn ƒë·ªÉ tr√°nh nh·∫ßm l·∫´n
//         const hintContainer = inputField.closest(".search-container")?.querySelector(".hint-container");

//         if (!hintContainer) return; // N·∫øu kh√¥ng t√¨m th·∫•y container, tho√°t

//         if (!searchTermForHint) {
//             hintContainer.innerHTML = "";
//             hintContainer.style.display = "none";
//             return;
//         }
//         // S·ª¨A ƒê∆Ø·ªúNG D·∫™N CHO ƒê√öNG V·ªöI V·ªä TR√ç C·ª¶A getAllProduct.php
//         // N·∫øu getAllProduct.php n·∫±m trong th∆∞ m·ª•c `pages` ·ªü g·ªëc, v√† script.js c≈©ng ·ªü g·ªëc (ho·∫∑c HTML ·ªü g·ªëc)
//         // th√¨ `pages/getAllProduct.php` l√† ƒë√∫ng.
//         // N·∫øu script.js n·∫±m trong th∆∞ m·ª•c con (v√≠ d·ª• assets/js) v√† HTML ·ªü g·ªëc, ƒë∆∞·ªùng d·∫´n v·∫´n l√† `pages/...`
//         // H√£y ƒë·∫£m b·∫£o ƒë∆∞·ªùng d·∫´n n√†y ph√¢n gi·∫£i ƒë√∫ng t·ª´ URL hi·ªán t·∫°i c·ªßa trang.
//         fetch(`pages/getAllProduct.php?term=${encodeURIComponent(searchTermForHint)}`) // S·ª≠a searchTerm
//             .then(response => {
//                 if (!response.ok) {
//                     return response.text().then(text => {
//                         console.error(`Server Error (showHints) ${response.status}:`, text);
//                         throw new Error(`Server responded with ${response.status}.`);
//                     });
//                 }
//                 return response.json();
//             })
//             .then(products => {
//                 hintContainer.innerHTML = "";
//                 if (!products || products.length === 0) {
//                     const notFoundItem = document.createElement("div");
//                     notFoundItem.className = "hint-item";
//                     notFoundItem.textContent = "Kh√¥ng t√¨m th·∫•y s·∫£n ph·∫©m";
//                     notFoundItem.style.textAlign = "center";
//                     notFoundItem.style.padding = "8px";
//                     notFoundItem.style.color = "#999";
//                     hintContainer.appendChild(notFoundItem);
//                 } else {
//                     products.forEach(item => {
//                         const hintItem = document.createElement("div");
//                         hintItem.className = "hint-item";
//                         hintItem.dataset.productId = item.product_id;
//                         hintItem.innerHTML = `
//                             <img src="${item.image || 'path/to/default/image.png'}" alt="${item.product_name || 'N/A'}"
//                                  style="width:30px; height:30px; margin-right:10px; vertical-align:middle;">
//                             ${item.product_name || 'Unknown Product'}
//                         `;
//                         hintItem.addEventListener("mousedown", (e) => {
//                             e.preventDefault();
//                             isSelectingHint = true;
//                         });
//                         hintItem.addEventListener("click", () => {
//                             window.location.href = `home?pages=product&id=${item.product_id}`; // ƒê·∫£m b·∫£o URL n√†y ƒë√∫ng
//                         });
//                         hintContainer.appendChild(hintItem);
//                     });
//                 }
//                 hintContainer.style.display = "block";
//             })
//             .catch(error => {
//                 console.error("L·ªói khi l·∫•y g·ª£i √Ω:", error);
//                 hintContainer.innerHTML = `<div class="hint-item" style="color:red;text-align:center;padding:8px;">L·ªói t·∫£i g·ª£i √Ω.</div>`;
//                 hintContainer.style.display = "block";
//             });
//     }

//     const searchInputs = document.querySelectorAll(".search-input");
//     const searchButtons = document.querySelectorAll(".searchBtn");
//     let inputTimeout = null;
//     let isSelectingHint = false;
//     let lastInputValue = "";

//     searchInputs.forEach(input => {
//         input.addEventListener("compositionend", function () {
//             lastInputValue = this.value.trim(); // C·∫≠p nh·∫≠t sau khi g√µ IME
//         });

//         input.addEventListener('input', function () {
//             const value = this.value.trim(); // L·∫•y gi√° tr·ªã hi·ªán t·∫°i, kh√¥ng ph·∫£i lastInputValue
//             lastInputValue = value; // C·∫≠p nh·∫≠t lastInputValue cho s·ª± ki·ªán Enter/Search button

//             if (inputTimeout) clearTimeout(inputTimeout);

//             const hintContainer = this.closest(".search-container")?.querySelector(".hint-container");
//             if (!hintContainer) return;

//             if (value === '') {
//                 hintContainer.innerHTML = '';
//                 hintContainer.style.display = 'none';
//                 // C√¢n nh·∫Øc l·∫°i vi·ªác reload khi input r·ªóng
//                 // const url = new URL(window.location.href);
//                 // if (url.searchParams.has('term')) {
//                 //     url.searchParams.delete('term');
//                 //     url.searchParams.set('page', '1'); // Ho·∫∑c gi·ªØ nguy√™n page hi·ªán t·∫°i
//                 //     window.history.pushState({}, '', url.toString()); // C·∫≠p nh·∫≠t URL kh√¥ng reload
//                 //     // G·ªçi h√†m ƒë·ªÉ render l·∫°i s·∫£n ph·∫©m n·∫øu c·∫ßn (n·∫øu trang render s·∫£n ph·∫©m b·∫±ng JS)
//                 // }
//                 return;
//             }
//             inputTimeout = setTimeout(() => {
//                 showHints(this); // Truy·ªÅn input element hi·ªán t·∫°i
//             }, 300); // Gi·∫£m debounce m·ªôt ch√∫t
//         });

//         input.addEventListener("keypress", function (event) {
//             if (event.key === "Enter") {
//                 event.preventDefault();
//                 const raw = lastInputValue.trim(); // S·ª≠ d·ª•ng lastInputValue ƒë√£ c·∫≠p nh·∫≠t t·ª´ 'input' ho·∫∑c 'compositionend'
//                 if (raw) {
//                     const term = encodeURIComponent(raw);
//                     // ƒê·∫£m b·∫£o URL t√¨m ki·∫øm l√† ƒë√∫ng, v√≠ d·ª• trang 'search-results' ho·∫∑c 'products'
//                     window.location.href = `home?pages=shop&term=${term}&page=1`;
//                 }
//             }
//         });

//         input.addEventListener("blur", function () {
//             setTimeout(() => {
//                 if (!isSelectingHint) {
//                     const hintContainer = this.closest(".search-container")?.querySelector(".hint-container");
//                     if (hintContainer) hintContainer.style.display = "none";
//                 }
//                 isSelectingHint = false; // Reset sau khi ki·ªÉm tra
//             }, 150); // Gi·∫£m timeout m·ªôt ch√∫t
//         });
//     });

//     document.addEventListener("mousedown", e => { // Ch·ªâ c·∫ßn m·ªôt event listener n√†y
//         if (e.target.closest(".hint-item")) {
//             isSelectingHint = true;
//         }
//     });

//     document.addEventListener("click", function (event) {
//         if (!event.target.closest(".search-container")) { // Ki·ªÉm tra n·∫øu click kh√¥ng n·∫±m trong search-container
//             document.querySelectorAll(".hint-container").forEach(hint => {
//                 hint.style.display = "none"; // Ch·ªâ ·∫©n, kh√¥ng x√≥a innerHTML ƒë·ªÉ gi·ªØ l·∫°i khi focus l·∫°i
//             });
//         }
//     });

//     searchButtons.forEach(button => {
//         button.addEventListener("click", function () {
//             const searchContainer = this.closest(".search-container") || this.closest(".input-wrapper");
//             const searchInput = searchContainer?.querySelector(".search-input");
//             if (searchInput) {
//                 const raw = searchInput.value.trim();
//                 if (raw) {
//                     const term = encodeURIComponent(raw);
//                     window.location.href = `home?pages=shop&term=${term}&page=1`; // ƒê·∫£m b·∫£o URL n√†y ƒë√∫ng
//                 }
//             }
//         });
//     });

//     // X·ª≠ l√Ω category filter
//     document.querySelectorAll(".nav-item").forEach(item => {
//         item.addEventListener("click", (e) => { // S·ª≠ d·ª•ng e cho event object
//             e.preventDefault(); // NgƒÉn h√†nh ƒë·ªông m·∫∑c ƒë·ªãnh n·∫øu l√† link <a>
//             const categoryValue = item.dataset.category || item.textContent.trim().toLowerCase(); // ∆Øu ti√™n data-category
//             const urlParams = new URLSearchParams(window.location.search);
//             if (categoryValue === "all" || categoryValue === "") {
//                 urlParams.delete('category');
//             } else {
//                 urlParams.set('category', categoryValue);
//             }
//             urlParams.set('page', '1');
//             // Gi·ªØ l·∫°i 'term' n·∫øu c√≥
//             // window.location.search = urlParams.toString(); // Reload v·ªõi param m·ªõi
//             // Ho·∫∑c n·∫øu b·∫°n mu·ªën chuy·ªÉn ƒë·∫øn trang shop:
//             window.location.href = `home?${urlParams.toString()}`;
//         });
//     });

//     // C·∫≠p nh·∫≠t class active cho navigation (c√≥ th·ªÉ kh√¥ng c·∫ßn n·∫øu server render)
//     const currentCategory = new URLSearchParams(window.location.search).get('category');
//     document.querySelectorAll(".nav-item").forEach(label => {
//         label.classList.remove("active");
//         const categoryValue = label.dataset.category || label.textContent.trim().toLowerCase();
//         if ((!currentCategory && (categoryValue === "all" || categoryValue === "")) || categoryValue === currentCategory) {
//             label.classList.add("active");
//         }
//     });


// }); // K·∫øt th√∫c DOMContentLoaded

// // ... (handleScroll, toggleBackToTopButton, scrollToTop, Slick carousel - gi·ªØ nguy√™n) ...
// /*scroll*/
// let lastScrollTop = 0;
// const header = document.querySelector('.header');

// if (header) { // Th√™m ki·ªÉm tra null cho header
//     const mediaQuery = window.matchMedia('(max-width: 1390px)');

//     function handleScroll() {
//         if (mediaQuery.matches) {
//             let scrollTop = window.pageYOffset || document.documentElement.scrollTop;
//             if (scrollTop > lastScrollTop) {
//                 header.classList.add('hide');
//             } else {
//                 header.classList.remove('hide');
//             }
//             lastScrollTop = scrollTop <= 0 ? 0 : scrollTop;
//         } else {
//             header.classList.remove('hide');
//         }
//     }
//     window.addEventListener('scroll', handleScroll);
//     window.addEventListener('resize', handleScroll);
//     handleScroll(); // Initial call
// }


// window.onscroll = function () { // C√≥ th·ªÉ g·ªôp v√†o event listener ·ªü tr√™n n·∫øu mu·ªën
//     toggleBackToTopButton();
// };

// function toggleBackToTopButton() {
//     const backToTopButton = document.getElementById("backToTop");
//     if (backToTopButton) { // Th√™m ki·ªÉm tra null
//         if (document.body.scrollTop > 100 || document.documentElement.scrollTop > 100) {
//             backToTopButton.style.display = "block";
//         } else {
//             backToTopButton.style.display = "none";
//         }
//     }
// }

// function scrollToTop() {
//     window.scrollTo({ top: 0, behavior: 'smooth' });
// }

// // Slick Carousel (ƒë·∫£m b·∫£o jQuery v√† Slick ƒë√£ ƒë∆∞·ª£c n·∫°p tr∆∞·ªõc script n√†y)
// if (typeof $ !== 'undefined' && $.fn.slick) { // Ki·ªÉm tra jQuery v√† Slick t·ªìn t·∫°i
//     $(document).ready(function(){
//         const carousel = $('.carousel_wrapper');
//         if (carousel.length) { // Ki·ªÉm tra carousel t·ªìn t·∫°i
//             carousel.slick({
//                 dots: true,
//                 infinite: true,
//                 speed: 500,
//                 slidesToShow: 1,
//                 slidesToScroll: 1,
//                 adaptiveHeight: true,
//                 prevArrow: $('.custom-prev').length ? $('.custom-prev') : null, // Ki·ªÉm tra arrow t·ªìn t·∫°i
//                 nextArrow: $('.custom-next').length ? $('.custom-next') : null,
//                 dotsClass: 'carousel-dots',
//                 responsive: [
//                     {
//                         breakpoint: 1197,
//                         settings: { /* ... */ }
//                     },
//                     {
//                         breakpoint: 768,
//                         settings: { /* ... */ arrows: false }
//                     },
//                     {
//                         breakpoint: 480,
//                         settings: { /* ... */ arrows: false }
//                     }
//                 ]
//             });
//         }
//     });
// } else {
//     console.warn("jQuery or Slick Carousel not loaded. Carousel will not function.");
// }
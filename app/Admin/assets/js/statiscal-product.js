
    document.addEventListener("DOMContentLoaded", function () {
        loadInitialData();
        document.getElementById("filterForm").addEventListener("submit", function (event) {
            event.preventDefault();
            console.log("‚úÖ Form submit, g·ªçi filterData()");
            filterData();
        });
         // L·∫Øng nghe s·ª± ki·ªán click c·ªßa c√°c button `.js-detail-btn`
         document.addEventListener("click", function (event) {
            let detailBtn = event.target.closest(".js-detail-btn");
            if (detailBtn) {
                event.preventDefault();
                let productId = detailBtn.getAttribute("data-id");
                console.log("üìù L·∫•y chi ti·∫øt h√≥a ƒë∆°n c·ªßa s·∫£n ph·∫©m ID:", productId);
                if (productId) {
                    showDetail(productId);
                } else {
                    console.warn("‚ö† Kh√¥ng c√≥ product_id h·ª£p l·ªá");
                }
            }
        });
    });
    // L·∫•y d·ªØ li·ªáu khi trang load
    function loadInitialData() {
        fetch("../../Admin/Controllers/statistical-process.php")
            .then(response => response.json())
            .then(data => {
                console.log("D·ªØ li·ªáu t·ª´ PHP:", data);
                console.log("üìå Best Seller:", data.bestseller);
                console.log("üìå Unpopular:", data.unpopular);
                renderData(data.bestseller, "orderBodyBestSeller");
                renderData(data.unpopular, "orderBodyUnpopular");
            })
            .catch(error => console.error("L·ªói:", error));
    }
    // **H√†m g·ª≠i y√™u c·∫ßu l·ªçc**
    function filterData() {
        console.log("‚è≥ H√†m filterData() ƒë√£ ch·∫°y");
        let fromDate = document.getElementById("fromDate").value;
        let toDate = document.getElementById("toDate").value;
        console.log("üì§ G·ª≠i d·ªØ li·ªáu l·ªçc:", { fromDate, toDate });
        let requestData = {
            fromDate: fromDate,
            toDate: toDate
        };

        fetch("../../Admin/Controllers/filter-statiscal-process.php", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify(requestData)
        })
        
        .then(response => response.json())  
        .then(data => {
            console.log("D·ªØ li·ªáu l·ªçc:", data);
            
            // S·ª≠ d·ª•ng d·ªØ li·ªáu l·ªçc thay v√¨ d·ªØ li·ªáu g·ªëc
            if (data.bestseller_filter.length > 0 || data.unpopular_filter.length > 0) {
                renderData(data.bestseller_filter, "orderBodyBestSeller");
                renderData(data.unpopular_filter, "orderBodyUnpopular");
            } else {
                alert("Please enter date to filter !")
            }
        })
        .catch(error => console.error("‚ùå L·ªói khi l·ªçc d·ªØ li·ªáu:", error));
    }


    // **H√†m render d·ªØ li·ªáu cho c·∫£ 2 b·∫£ng**
    function renderData(data, tableId) {
        let tableBody = document.getElementById(tableId);
        tableBody.innerHTML = ""; 
        let rows = "";
        data.forEach((order, index) => {
            rows += `
                <tr>
                    <td>#${index + 1}</td>
                    <td>${order.delivery_date}</td>
                    <td>${order.product_name}</td>
                    <td>${order.quantity}</td>
                    <td>
                        <button class="js-detail-btn" data-id="${order.product_id || ''}">
                            <ion-icon name="receipt-outline"></ion-icon>
                        </button>
                    </td>
                </tr>
            `;
        });
        tableBody.innerHTML = rows;
    }
// G·ª≠i y√™u c·∫ßu l·∫•y d·ªØ li·ªáu chi ti·∫øt h√≥a ƒë∆°n
function showDetail(productId) {
    console.log("üì§ G·ª≠i y√™u c·∫ßu l·∫•y h√≥a ƒë∆°n cho s·∫£n ph·∫©m ID:", productId);
    fetch(`../../Admin/Controllers/detail-statistical-process.php?product_id=${productId}`)
        .then(response => response.json())
        .then(data => {
            console.log("üì¶ D·ªØ li·ªáu h√≥a ƒë∆°n nh·∫≠n ƒë∆∞·ª£c:", data);

            if (data.length > 0) {
                renderReceipt(data);
                document.querySelector(".div-receipt").classList.add("open");
            } else {
                alert("No invoice contains this product.");
            }
        })
        .catch(error => console.error("‚ùå L·ªói khi t·∫£i h√≥a ƒë∆°n:", error));
}
// Hi·ªÉn th·ªã th√¥ng tin h√≥a ƒë∆°n
function renderReceipt(data) {
    let receiptContainer = document.querySelector(".receipt");

    console.log("üì¶ D·ªØ li·ªáu h√≥a ƒë∆°n nh·∫≠n ƒë∆∞·ª£c:", data); // ‚úÖ Debug 1: Xem d·ªØ li·ªáu ƒë·∫ßu v√†o

    // Nh√≥m s·∫£n ph·∫©m theo t·ª´ng order_id
    let ordersMap = {};
    data.forEach(order => {
        if (!ordersMap[order.order_id]) {
            ordersMap[order.order_id] = {
                orderInfo: order,
                products: []
            };
        }
        ordersMap[order.order_id].products.push(order);
    });

    console.log("üìä Nh√≥m h√≥a ƒë∆°n theo order_id:", ordersMap); // ‚úÖ Debug 2: Ki·ªÉm tra d·ªØ li·ªáu nh√≥m

    let orderIds = Object.keys(ordersMap);
    
    let receiptsHTML = orderIds.map(orderId => {
        let orderData = ordersMap[orderId];
        let order = orderData.orderInfo;

        console.log(`üìù H√≥a ƒë∆°n ID: ${order.order_id} c√≥ ${orderData.products.length} s·∫£n ph·∫©m`, orderData.products); // ‚úÖ Debug 3: X√°c nh·∫≠n s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong h√≥a ƒë∆°n

        // ‚úÖ L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m c·ªßa h√≥a ƒë∆°n n√†y
        let rows = orderData.products.map(product => `  
            <tr>
                <td>${product.product_name}</td>
                <td>${product.quantity}</td>
                <td>${new Intl.NumberFormat('vi-VN').format(product.price * product.quantity)} ƒë</td>
                <td>${product.note || "Kh√¥ng c√≥"}</td>
            </tr>
        `).join("");

        return `
            <div class="receipt-box">
                <p class="title-receipt">ID Receipt: <strong>#${order.order_id}</strong></p>

                <div class="form-group">
                    <label><strong>Customer name:</strong></label>
                    <input type="text" value="${order.user_name}" readonly>
                </div>
                <div class="form-group">
                    <label><strong>Phone number:</strong></label>
                    <input type="text" value="${order.phone}" readonly>
                </div>
                <div class="form-group">
                    <label><strong>Delivery address:</strong></label>
                    <input type="text" value="${order.shipping_street}, ${order.shipping_ward}, ${order.shipping_district}, ${order.shipping_city}" readonly>
                </div>
                <div class="form-group">
                    <label><strong>Status:</strong></label>
                    <input type="text" value="${order.status}" readonly>
                </div>
                <div class="form-group">
                    <label><strong>Greeting message:</strong></label>
                    <input type="text" value="${order.notes || "Kh√¥ng c√≥"}" readonly>
                </div>

                <table class="table-detail">
                    <thead>
                        <tr>
                            <th>Name product</th>
                            <th>Quantity</th>
                            <th>Total Amount</th>
                            <th>Note</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${rows}  
                        <tr>
                            <td style="font-weight: bold; text-align: right;">Total:</td>
                            <td colspan="3">${new Intl.NumberFormat('vi-VN').format(order.total_cost)} ƒë</td>
                        </tr>
                        <tr>
                            <td style="font-weight: bold; text-align: right;">Payment method:</td>
                            <td colspan="3">${order.payment_method}</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        `;
    }).join("");

    // Th√™m n√∫t Cancel c·ªë ƒë·ªãnh b√™n ngo√†i c√°c h√≥a ƒë∆°n
    receiptsHTML += `
        <div class="close-btn fixed">
            <button onclick="closeDetail()">Cancel<ion-icon name="close-outline"></ion-icon></button>
        </div>
    `;

    console.log("üìú HTML h√≥a ƒë∆°n ƒë∆∞·ª£c t·∫°o:", receiptsHTML); // ‚úÖ Debug 4: Xem HTML tr∆∞·ªõc khi g√°n v√†o DOM

    receiptContainer.innerHTML = receiptsHTML;
}



// ƒê√≥ng h√≥a ƒë∆°n
function closeDetail() {
    document.querySelector(".div-receipt").classList.remove("open");
}
